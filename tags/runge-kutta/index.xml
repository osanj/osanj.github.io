<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>runge-kutta on Just a Notepad</title>
    <link>https://osanj.github.io/tags/runge-kutta/</link>
    <description>Recent content in runge-kutta on Just a Notepad</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 03 Jan 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://osanj.github.io/tags/runge-kutta/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Spring Dynamics ODE for Animation Interpolation (Rebuilding Facebook Rebound)</title>
      <link>https://osanj.github.io/post/spring-dynamics-interpolation/</link>
      <pubDate>Sat, 03 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://osanj.github.io/post/spring-dynamics-interpolation/</guid>
      <description>Rebound is an open-source project by Facebook. It is used to control the course of animations. In case you are familiar with Android, you might know that Android provides several Interpolator classes (AccelerateInterpolator, DecelerateInterpolator, &amp;hellip;) to handle that task. While most of these provide a rather simple course of animation, Facebook&amp;rsquo;s Rebound is based on spring dynamics which is not trivial to implement. This article describes my attempt to reverse engineer the Rebound library.</description>
    </item>
    
  </channel>
</rss>
